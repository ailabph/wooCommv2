import * as t from 'io-ts';

const WooPrivateProductV3Codec = t.type({
  id: t.number,
  name: t.string,
  slug: t.string,
  permalink: t.string,
  date_created: t.string,
  date_created_gmt: t.string,
  date_modified: t.string,
  date_modified_gmt: t.string,
  type: t.string,
  status: t.string,
  featured: t.boolean,
  catalog_visibility: t.string,
  description: t.string,
  short_description: t.string,
  sku: t.string,
  price: t.string,
  regular_price: t.string,
  sale_price: t.string,
  date_on_sale_from: t.union([t.string, t.null]),
  date_on_sale_from_gmt: t.union([t.string, t.null]),
  date_on_sale_to: t.union([t.string, t.null]),
  date_on_sale_to_gmt: t.union([t.string, t.null]),
  on_sale: t.boolean,
  purchasable: t.boolean,
  total_sales: t.number,
  virtual: t.boolean,
  downloadable: t.boolean,
  download_limit: t.number,
  download_expiry: t.number,
  external_url: t.string,
  button_text: t.string,
  tax_status: t.string,
  tax_class: t.string,
  manage_stock: t.boolean,
  stock_quantity: t.union([t.number, t.null]),
  weight: t.string,
  dimensions: t.type({
    length: t.string,
    width: t.string,
    height: t.string,
  }),
  shipping_required: t.boolean,
  shipping_taxable: t.boolean,
  shipping_class: t.string,
  shipping_class_id: t.number,
  parent_id: t.number,
  categories: t.array(
    t.type({
      id: t.number,
      name: t.string,
      slug: t.string,
    }),
  ),
  images: t.array(
    t.type({
      id: t.number,
      date_created: t.string,
      date_created_gmt: t.string,
      date_modified: t.string,
      date_modified_gmt: t.string,
      src: t.string,
      name: t.string,
      alt: t.string,
    }),
  ),
  variations: t.array(t.number),
  price_html: t.string,
});

type WooPrivateProductV3Type = t.TypeOf<typeof WooPrivateProductV3Codec>;

export { WooPrivateProductV3Codec, WooPrivateProductV3Type };
